{"id":"node_modules/protobufjs/src/object.js","dependencies":[{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\package.json","includedInParent":true,"mtime":1648481643194},{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\protobufjs\\package.json","includedInParent":true,"mtime":1648481642169},{"name":"./util","loc":{"line":6,"column":19,"index":119},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\protobufjs\\src\\object.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\protobufjs\\src\\util.js"}],"generated":{"js":"\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/protobufjs/src/object.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/protobufjs/src/object.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}}],"sources":{"node_modules/protobufjs/src/object.js":"\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n"},"lineCount":244}},"error":null,"hash":"8d920f5dcc81cdb3114595a0060c9fc8","cacheData":{"env":{}}}