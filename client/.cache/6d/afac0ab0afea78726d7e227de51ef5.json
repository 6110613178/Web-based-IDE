{"id":"node_modules/errno/custom.js","dependencies":[{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\package.json","includedInParent":true,"mtime":1648303336053},{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\errno\\package.json","includedInParent":true,"mtime":1648301736210},{"name":"prr","loc":{"line":1,"column":18,"index":18},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\errno\\custom.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\prr\\prr.js"}],"generated":{"js":"var prr = require('prr')\n\nfunction init (type, message, cause) {\n  if (!!message && typeof message != 'string') {\n    message = message.message || message.name\n  }\n  prr(this, {\n      type    : type\n    , name    : type\n      // can be passed just a 'cause'\n    , cause   : typeof message != 'string' ? message : cause\n    , message : message\n  }, 'ewr')\n}\n\n// generic prototype, not intended to be actually used - helpful for `instanceof`\nfunction CustomError (message, cause) {\n  Error.call(this)\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, this.constructor)\n  init.call(this, 'CustomError', message, cause)\n}\n\nCustomError.prototype = new Error()\n\nfunction createError (errno, type, proto) {\n  var err = function (message, cause) {\n    init.call(this, type, message, cause)\n    //TODO: the specificity here is stupid, errno should be available everywhere\n    if (type == 'FilesystemError') {\n      this.code    = this.cause.code\n      this.path    = this.cause.path\n      this.errno   = this.cause.errno\n      this.message =\n        (errno.errno[this.cause.errno]\n          ? errno.errno[this.cause.errno].description\n          : this.cause.message)\n        + (this.cause.path ? ' [' + this.cause.path + ']' : '')\n    }\n    Error.call(this)\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, err)\n  }\n  err.prototype = !!proto ? new proto() : new CustomError()\n  return err\n}\n\nmodule.exports = function (errno) {\n  var ce = function (type, proto) {\n    return createError(errno, type, proto)\n  }\n  return {\n      CustomError     : CustomError\n    , FilesystemError : ce('FilesystemError')\n    , createError     : ce\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/errno/custom.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/errno/custom.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"node_modules/errno/custom.js":"var prr = require('prr')\n\nfunction init (type, message, cause) {\n  if (!!message && typeof message != 'string') {\n    message = message.message || message.name\n  }\n  prr(this, {\n      type    : type\n    , name    : type\n      // can be passed just a 'cause'\n    , cause   : typeof message != 'string' ? message : cause\n    , message : message\n  }, 'ewr')\n}\n\n// generic prototype, not intended to be actually used - helpful for `instanceof`\nfunction CustomError (message, cause) {\n  Error.call(this)\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, this.constructor)\n  init.call(this, 'CustomError', message, cause)\n}\n\nCustomError.prototype = new Error()\n\nfunction createError (errno, type, proto) {\n  var err = function (message, cause) {\n    init.call(this, type, message, cause)\n    //TODO: the specificity here is stupid, errno should be available everywhere\n    if (type == 'FilesystemError') {\n      this.code    = this.cause.code\n      this.path    = this.cause.path\n      this.errno   = this.cause.errno\n      this.message =\n        (errno.errno[this.cause.errno]\n          ? errno.errno[this.cause.errno].description\n          : this.cause.message)\n        + (this.cause.path ? ' [' + this.cause.path + ']' : '')\n    }\n    Error.call(this)\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, err)\n  }\n  err.prototype = !!proto ? new proto() : new CustomError()\n  return err\n}\n\nmodule.exports = function (errno) {\n  var ce = function (type, proto) {\n    return createError(errno, type, proto)\n  }\n  return {\n      CustomError     : CustomError\n    , FilesystemError : ce('FilesystemError')\n    , createError     : ce\n  }\n}\n"},"lineCount":58}},"error":null,"hash":"7230f7201608681011325e36f732e62f","cacheData":{"env":{}}}