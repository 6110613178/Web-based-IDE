{"id":"node_modules/write-file-atomic/index.js","dependencies":[{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\package.json","includedInParent":true,"mtime":1648481643194},{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\package.json","includedInParent":true,"mtime":1648481640064},{"name":"fs","loc":{"line":7,"column":19,"index":197},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"imurmurhash","loc":{"line":8,"column":28,"index":231},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\imurmurhash\\imurmurhash.js"},{"name":"signal-exit","loc":{"line":9,"column":23,"index":269},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\signal-exit\\index.js"},{"name":"path","loc":{"line":10,"column":21,"index":305},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\path-browserify\\index.js"},{"name":"is-typedarray","loc":{"line":11,"column":29,"index":342},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\is-typedarray\\index.js"},{"name":"typedarray-to-buffer","loc":{"line":12,"column":35,"index":394},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\node_modules\\typedarray-to-buffer\\index.js"},{"name":"util","loc":{"line":13,"column":30,"index":448},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\util\\util.js"},{"name":"worker_threads","optional":true,"loc":{"line":20,"column":34,"index":655},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js"},{"name":"process","parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\process\\browser.js"},{"name":"buffer","parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\buffer\\index.js"}],"generated":{"js":"var __filename = \"C:\\\\Users\\\\Teerat Prasitwet\\\\Desktop\\\\Web-based IDE Project\\\\client\\\\node_modules\\\\write-file-atomic\\\\index.js\";\nvar process = require(\"process\");\nvar Buffer = require(\"buffer\").Buffer;\n'use strict'\nmodule.exports = writeFile\nmodule.exports.sync = writeFileSync\nmodule.exports._getTmpname = getTmpname // for testing\nmodule.exports._cleanupOnExit = cleanupOnExit\n\nconst fs = require('fs')\nconst MurmurHash3 = require('imurmurhash')\nconst onExit = require('signal-exit')\nconst path = require('path')\nconst isTypedArray = require('is-typedarray')\nconst typedArrayToBuffer = require('typedarray-to-buffer')\nconst { promisify } = require('util')\nconst activeFiles = {}\n\n// if we run inside of a worker_thread, `process.pid` is not unique\n/* istanbul ignore next */\nconst threadId = (function getId () {\n  try {\n    const workerThreads = require('worker_threads')\n\n    /// if we are in main thread, this is set to `0`\n    return workerThreads.threadId\n  } catch (e) {\n    // worker_threads are not available, fallback to 0\n    return 0\n  }\n})()\n\nlet invocations = 0\nfunction getTmpname (filename) {\n  return filename + '.' +\n    MurmurHash3(__filename)\n      .hash(String(process.pid))\n      .hash(String(threadId))\n      .hash(String(++invocations))\n      .result()\n}\n\nfunction cleanupOnExit (tmpfile) {\n  return () => {\n    try {\n      fs.unlinkSync(typeof tmpfile === 'function' ? tmpfile() : tmpfile)\n    } catch (_) {}\n  }\n}\n\nfunction serializeActiveFile (absoluteName) {\n  return new Promise(resolve => {\n    // make a queue if it doesn't already exist\n    if (!activeFiles[absoluteName]) activeFiles[absoluteName] = []\n\n    activeFiles[absoluteName].push(resolve) // add this job to the queue\n    if (activeFiles[absoluteName].length === 1) resolve() // kick off the first one\n  })\n}\n\n// https://github.com/isaacs/node-graceful-fs/blob/master/polyfills.js#L315-L342\nfunction isChownErrOk (err) {\n  if (err.code === 'ENOSYS') {\n    return true\n  }\n\n  const nonroot = !process.getuid || process.getuid() !== 0\n  if (nonroot) {\n    if (err.code === 'EINVAL' || err.code === 'EPERM') {\n      return true\n    }\n  }\n\n  return false\n}\n\nasync function writeFileAsync (filename, data, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  let fd\n  let tmpfile\n  /* istanbul ignore next -- The closure only gets called when onExit triggers */\n  const removeOnExitHandler = onExit(cleanupOnExit(() => tmpfile))\n  const absoluteName = path.resolve(filename)\n\n  try {\n    await serializeActiveFile(absoluteName)\n    const truename = await promisify(fs.realpath)(filename).catch(() => filename)\n    tmpfile = getTmpname(truename)\n\n    if (!options.mode || !options.chown) {\n      // Either mode or chown is not explicitly set\n      // Default behavior is to copy it from original file\n      const stats = await promisify(fs.stat)(truename).catch(() => {})\n      if (stats) {\n        if (options.mode == null) {\n          options.mode = stats.mode\n        }\n\n        if (options.chown == null && process.getuid) {\n          options.chown = { uid: stats.uid, gid: stats.gid }\n        }\n      }\n    }\n\n    fd = await promisify(fs.open)(tmpfile, 'w', options.mode)\n    if (options.tmpfileCreated) {\n      await options.tmpfileCreated(tmpfile)\n    }\n    if (isTypedArray(data)) {\n      data = typedArrayToBuffer(data)\n    }\n    if (Buffer.isBuffer(data)) {\n      await promisify(fs.write)(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      await promisify(fs.write)(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n\n    if (options.fsync !== false) {\n      await promisify(fs.fsync)(fd)\n    }\n\n    await promisify(fs.close)(fd)\n    fd = null\n\n    if (options.chown) {\n      await promisify(fs.chown)(tmpfile, options.chown.uid, options.chown.gid).catch(err => {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      })\n    }\n\n    if (options.mode) {\n      await promisify(fs.chmod)(tmpfile, options.mode).catch(err => {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      })\n    }\n\n    await promisify(fs.rename)(tmpfile, truename)\n  } finally {\n    if (fd) {\n      await promisify(fs.close)(fd).catch(\n        /* istanbul ignore next */\n        () => {}\n      )\n    }\n    removeOnExitHandler()\n    await promisify(fs.unlink)(tmpfile).catch(() => {})\n    activeFiles[absoluteName].shift() // remove the element added by serializeSameFile\n    if (activeFiles[absoluteName].length > 0) {\n      activeFiles[absoluteName][0]() // start next job if one is pending\n    } else delete activeFiles[absoluteName]\n  }\n}\n\nfunction writeFile (filename, data, options, callback) {\n  if (options instanceof Function) {\n    callback = options\n    options = {}\n  }\n\n  const promise = writeFileAsync(filename, data, options)\n  if (callback) {\n    promise.then(callback, callback)\n  }\n\n  return promise\n}\n\nfunction writeFileSync (filename, data, options) {\n  if (typeof options === 'string') options = { encoding: options }\n  else if (!options) options = {}\n  try {\n    filename = fs.realpathSync(filename)\n  } catch (ex) {\n    // it's ok, it'll happen on a not yet existing file\n  }\n  const tmpfile = getTmpname(filename)\n\n  if (!options.mode || !options.chown) {\n    // Either mode or chown is not explicitly set\n    // Default behavior is to copy it from original file\n    try {\n      const stats = fs.statSync(filename)\n      options = Object.assign({}, options)\n      if (!options.mode) {\n        options.mode = stats.mode\n      }\n      if (!options.chown && process.getuid) {\n        options.chown = { uid: stats.uid, gid: stats.gid }\n      }\n    } catch (ex) {\n      // ignore stat errors\n    }\n  }\n\n  let fd\n  const cleanup = cleanupOnExit(tmpfile)\n  const removeOnExitHandler = onExit(cleanup)\n\n  let threw = true\n  try {\n    fd = fs.openSync(tmpfile, 'w', options.mode || 0o666)\n    if (options.tmpfileCreated) {\n      options.tmpfileCreated(tmpfile)\n    }\n    if (isTypedArray(data)) {\n      data = typedArrayToBuffer(data)\n    }\n    if (Buffer.isBuffer(data)) {\n      fs.writeSync(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      fs.writeSync(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n    if (options.fsync !== false) {\n      fs.fsyncSync(fd)\n    }\n\n    fs.closeSync(fd)\n    fd = null\n\n    if (options.chown) {\n      try {\n        fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)\n      } catch (err) {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      }\n    }\n\n    if (options.mode) {\n      try {\n        fs.chmodSync(tmpfile, options.mode)\n      } catch (err) {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      }\n    }\n\n    fs.renameSync(tmpfile, filename)\n    threw = false\n  } finally {\n    if (fd) {\n      try {\n        fs.closeSync(fd)\n      } catch (ex) {\n        // ignore close errors at this stage, error may have closed fd already.\n      }\n    }\n    removeOnExitHandler()\n    if (threw) {\n      cleanup()\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/write-file-atomic/index.js","original":{"line":1,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":2,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":3,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":6,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":7,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":8,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":9,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":10,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":11,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":12,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":13,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":14,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":15,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":16,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":17,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":18,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":19,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":20,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":21,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":22,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":23,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":24,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":25,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":26,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":27,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":28,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":29,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":30,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":31,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":32,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":33,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":34,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":35,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":36,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":37,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":38,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":39,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":40,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":41,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":42,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":43,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":44,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":45,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":46,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":47,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":48,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":49,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":50,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":51,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":52,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":53,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":54,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":55,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":56,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":57,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":58,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":59,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":60,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":61,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":62,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":63,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":64,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":65,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":66,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":67,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":68,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":69,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":70,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":71,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":72,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":73,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":74,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":75,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":76,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":77,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":78,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":79,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":80,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":81,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":82,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":83,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":84,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":85,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":86,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":87,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":88,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":89,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":90,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":91,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":92,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":93,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":94,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":95,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":96,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":97,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":98,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":99,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":100,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":101,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":102,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":103,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":104,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":105,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":106,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":107,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":108,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":109,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":110,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":111,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":112,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":113,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":114,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":115,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":116,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":117,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":118,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":119,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":120,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":121,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":122,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":123,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":124,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":125,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":126,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":127,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":128,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":129,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":130,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":131,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":132,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":133,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":134,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":135,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":136,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":137,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":138,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":139,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":140,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":141,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":142,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":143,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":144,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":145,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":146,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":147,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":148,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":149,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":150,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":151,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":152,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":153,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":154,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":155,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":156,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":157,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":158,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":159,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":160,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":161,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":162,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":163,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":164,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":165,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":166,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":167,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":168,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":169,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":170,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":171,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":172,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":173,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":174,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":175,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":176,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":177,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":178,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":179,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":180,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":181,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":182,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":183,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":184,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":185,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":186,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":187,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":188,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":189,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":190,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":191,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":192,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":193,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":194,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":195,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":196,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":197,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":198,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":199,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":200,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":201,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":202,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":203,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":204,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":205,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":206,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":207,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":208,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":209,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":210,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":211,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":212,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":213,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":214,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":215,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":216,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":217,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":218,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":219,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":220,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":221,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":222,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":223,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":224,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":225,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":226,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":227,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":228,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":229,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":230,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":231,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":232,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":233,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":234,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":235,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":236,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":237,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":238,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":239,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":240,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":241,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":242,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":243,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":244,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":245,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":246,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":247,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":248,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":249,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":250,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":251,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":252,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":253,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":254,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":255,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":256,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":257,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":258,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":259,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":260,"column":0},"generated":{"line":263,"column":0}}],"sources":{"node_modules/write-file-atomic/index.js":"'use strict'\nmodule.exports = writeFile\nmodule.exports.sync = writeFileSync\nmodule.exports._getTmpname = getTmpname // for testing\nmodule.exports._cleanupOnExit = cleanupOnExit\n\nconst fs = require('fs')\nconst MurmurHash3 = require('imurmurhash')\nconst onExit = require('signal-exit')\nconst path = require('path')\nconst isTypedArray = require('is-typedarray')\nconst typedArrayToBuffer = require('typedarray-to-buffer')\nconst { promisify } = require('util')\nconst activeFiles = {}\n\n// if we run inside of a worker_thread, `process.pid` is not unique\n/* istanbul ignore next */\nconst threadId = (function getId () {\n  try {\n    const workerThreads = require('worker_threads')\n\n    /// if we are in main thread, this is set to `0`\n    return workerThreads.threadId\n  } catch (e) {\n    // worker_threads are not available, fallback to 0\n    return 0\n  }\n})()\n\nlet invocations = 0\nfunction getTmpname (filename) {\n  return filename + '.' +\n    MurmurHash3(__filename)\n      .hash(String(process.pid))\n      .hash(String(threadId))\n      .hash(String(++invocations))\n      .result()\n}\n\nfunction cleanupOnExit (tmpfile) {\n  return () => {\n    try {\n      fs.unlinkSync(typeof tmpfile === 'function' ? tmpfile() : tmpfile)\n    } catch (_) {}\n  }\n}\n\nfunction serializeActiveFile (absoluteName) {\n  return new Promise(resolve => {\n    // make a queue if it doesn't already exist\n    if (!activeFiles[absoluteName]) activeFiles[absoluteName] = []\n\n    activeFiles[absoluteName].push(resolve) // add this job to the queue\n    if (activeFiles[absoluteName].length === 1) resolve() // kick off the first one\n  })\n}\n\n// https://github.com/isaacs/node-graceful-fs/blob/master/polyfills.js#L315-L342\nfunction isChownErrOk (err) {\n  if (err.code === 'ENOSYS') {\n    return true\n  }\n\n  const nonroot = !process.getuid || process.getuid() !== 0\n  if (nonroot) {\n    if (err.code === 'EINVAL' || err.code === 'EPERM') {\n      return true\n    }\n  }\n\n  return false\n}\n\nasync function writeFileAsync (filename, data, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  let fd\n  let tmpfile\n  /* istanbul ignore next -- The closure only gets called when onExit triggers */\n  const removeOnExitHandler = onExit(cleanupOnExit(() => tmpfile))\n  const absoluteName = path.resolve(filename)\n\n  try {\n    await serializeActiveFile(absoluteName)\n    const truename = await promisify(fs.realpath)(filename).catch(() => filename)\n    tmpfile = getTmpname(truename)\n\n    if (!options.mode || !options.chown) {\n      // Either mode or chown is not explicitly set\n      // Default behavior is to copy it from original file\n      const stats = await promisify(fs.stat)(truename).catch(() => {})\n      if (stats) {\n        if (options.mode == null) {\n          options.mode = stats.mode\n        }\n\n        if (options.chown == null && process.getuid) {\n          options.chown = { uid: stats.uid, gid: stats.gid }\n        }\n      }\n    }\n\n    fd = await promisify(fs.open)(tmpfile, 'w', options.mode)\n    if (options.tmpfileCreated) {\n      await options.tmpfileCreated(tmpfile)\n    }\n    if (isTypedArray(data)) {\n      data = typedArrayToBuffer(data)\n    }\n    if (Buffer.isBuffer(data)) {\n      await promisify(fs.write)(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      await promisify(fs.write)(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n\n    if (options.fsync !== false) {\n      await promisify(fs.fsync)(fd)\n    }\n\n    await promisify(fs.close)(fd)\n    fd = null\n\n    if (options.chown) {\n      await promisify(fs.chown)(tmpfile, options.chown.uid, options.chown.gid).catch(err => {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      })\n    }\n\n    if (options.mode) {\n      await promisify(fs.chmod)(tmpfile, options.mode).catch(err => {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      })\n    }\n\n    await promisify(fs.rename)(tmpfile, truename)\n  } finally {\n    if (fd) {\n      await promisify(fs.close)(fd).catch(\n        /* istanbul ignore next */\n        () => {}\n      )\n    }\n    removeOnExitHandler()\n    await promisify(fs.unlink)(tmpfile).catch(() => {})\n    activeFiles[absoluteName].shift() // remove the element added by serializeSameFile\n    if (activeFiles[absoluteName].length > 0) {\n      activeFiles[absoluteName][0]() // start next job if one is pending\n    } else delete activeFiles[absoluteName]\n  }\n}\n\nfunction writeFile (filename, data, options, callback) {\n  if (options instanceof Function) {\n    callback = options\n    options = {}\n  }\n\n  const promise = writeFileAsync(filename, data, options)\n  if (callback) {\n    promise.then(callback, callback)\n  }\n\n  return promise\n}\n\nfunction writeFileSync (filename, data, options) {\n  if (typeof options === 'string') options = { encoding: options }\n  else if (!options) options = {}\n  try {\n    filename = fs.realpathSync(filename)\n  } catch (ex) {\n    // it's ok, it'll happen on a not yet existing file\n  }\n  const tmpfile = getTmpname(filename)\n\n  if (!options.mode || !options.chown) {\n    // Either mode or chown is not explicitly set\n    // Default behavior is to copy it from original file\n    try {\n      const stats = fs.statSync(filename)\n      options = Object.assign({}, options)\n      if (!options.mode) {\n        options.mode = stats.mode\n      }\n      if (!options.chown && process.getuid) {\n        options.chown = { uid: stats.uid, gid: stats.gid }\n      }\n    } catch (ex) {\n      // ignore stat errors\n    }\n  }\n\n  let fd\n  const cleanup = cleanupOnExit(tmpfile)\n  const removeOnExitHandler = onExit(cleanup)\n\n  let threw = true\n  try {\n    fd = fs.openSync(tmpfile, 'w', options.mode || 0o666)\n    if (options.tmpfileCreated) {\n      options.tmpfileCreated(tmpfile)\n    }\n    if (isTypedArray(data)) {\n      data = typedArrayToBuffer(data)\n    }\n    if (Buffer.isBuffer(data)) {\n      fs.writeSync(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      fs.writeSync(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n    if (options.fsync !== false) {\n      fs.fsyncSync(fd)\n    }\n\n    fs.closeSync(fd)\n    fd = null\n\n    if (options.chown) {\n      try {\n        fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)\n      } catch (err) {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      }\n    }\n\n    if (options.mode) {\n      try {\n        fs.chmodSync(tmpfile, options.mode)\n      } catch (err) {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      }\n    }\n\n    fs.renameSync(tmpfile, filename)\n    threw = false\n  } finally {\n    if (fd) {\n      try {\n        fs.closeSync(fd)\n      } catch (ex) {\n        // ignore close errors at this stage, error may have closed fd already.\n      }\n    }\n    removeOnExitHandler()\n    if (threw) {\n      cleanup()\n    }\n  }\n}\n"},"lineCount":263}},"error":null,"hash":"97869aedcc40dd77ffc92363af12e117","cacheData":{"env":{}}}