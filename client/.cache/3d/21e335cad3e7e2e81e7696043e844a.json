{"id":"node_modules/limiter/lib/tokenBucket.js","dependencies":[{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\package.json","includedInParent":true,"mtime":1648481643194},{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\limiter\\package.json","includedInParent":true,"mtime":1648481640466},{"name":"process","parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\limiter\\lib\\tokenBucket.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n\r\n/**\r\n * A hierarchical token bucket for rate limiting. See\r\n * http://en.wikipedia.org/wiki/Token_bucket for more information.\r\n * @author John Hurliman <jhurliman@cull.tv>\r\n *\r\n * @param {Number} bucketSize Maximum number of tokens to hold in the bucket.\r\n *  Also known as the burst rate.\r\n * @param {Number} tokensPerInterval Number of tokens to drip into the bucket\r\n *  over the course of one interval.\r\n * @param {String|Number} interval The interval length in milliseconds, or as\r\n *  one of the following strings: 'second', 'minute', 'hour', day'.\r\n * @param {TokenBucket} parentBucket Optional. A token bucket that will act as\r\n *  the parent of this bucket.\r\n */\r\nvar TokenBucket = function(bucketSize, tokensPerInterval, interval, parentBucket) {\r\n  this.bucketSize = bucketSize;\r\n  this.tokensPerInterval = tokensPerInterval;\r\n\r\n  if (typeof interval === 'string') {\r\n    switch (interval) {\r\n      case 'sec': case 'second':\r\n        this.interval = 1000; break;\r\n      case 'min': case 'minute':\r\n        this.interval = 1000 * 60; break;\r\n      case 'hr': case 'hour':\r\n        this.interval = 1000 * 60 * 60; break;\r\n      case 'day':\r\n        this.interval = 1000 * 60 * 60 * 24; break;\r\n      default:\r\n        throw new Error('Invaid interval ' + interval);\r\n    }\r\n  } else {\r\n    this.interval = interval;\r\n  }\r\n\r\n  this.parentBucket = parentBucket;\r\n  this.content = 0;\r\n  this.lastDrip = +new Date();\r\n};\r\n\r\nTokenBucket.prototype = {\r\n  bucketSize: 1,\r\n  tokensPerInterval: 1,\r\n  interval: 1000,\r\n  parentBucket: null,\r\n  content: 0,\r\n  lastDrip: 0,\r\n\r\n  /**\r\n   * Remove the requested number of tokens and fire the given callback. If the\r\n   * bucket (and any parent buckets) contains enough tokens this will happen\r\n   * immediately. Otherwise, the removal and callback will happen when enough\r\n   * tokens become available.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Function} callback(err, remainingTokens)\r\n   * @returns {Boolean} True if the callback was fired immediately, otherwise\r\n   *  false.\r\n   */\r\n  removeTokens: function(count, callback) {\r\n    var self = this;\r\n\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize) {\r\n      process.nextTick(callback.bind(null, null, count, Number.POSITIVE_INFINITY));\r\n      return true;\r\n    }\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize) {\r\n      process.nextTick(callback.bind(null, 'Requested tokens ' + count + ' exceeds bucket size ' +\r\n        this.bucketSize, null));\r\n      return false;\r\n    }\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, come back later\r\n    if (count > this.content)\r\n      return comeBackLater();\r\n\r\n    if (this.parentBucket) {\r\n      // Remove the requested from the parent bucket first\r\n      return this.parentBucket.removeTokens(count, function(err, remainingTokens) {\r\n        if (err) return callback(err, null);\r\n\r\n        // Check that we still have enough tokens in this bucket\r\n        if (count > self.content)\r\n          return comeBackLater();\r\n\r\n        // Tokens were removed from the parent bucket, now remove them from\r\n        // this bucket and fire the callback. Note that we look at the current\r\n        // bucket and parent bucket's remaining tokens and return the smaller\r\n        // of the two values\r\n        self.content -= count;\r\n        callback(null, Math.min(remainingTokens, self.content));\r\n      });\r\n    } else {\r\n      // Remove the requested tokens from this bucket and fire the callback\r\n      this.content -= count;\r\n      process.nextTick(callback.bind(null, null, this.content));\r\n      return true;\r\n    }\r\n\r\n    function comeBackLater() {\r\n      // How long do we need to wait to make up the difference in tokens?\r\n      var waitInterval = Math.ceil(\r\n        (count - self.content) * (self.interval / self.tokensPerInterval));\r\n      setTimeout(function() { self.removeTokens(count, callback); }, waitInterval);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to remove the requested number of tokens and return immediately.\r\n   * If the bucket (and any parent buckets) contains enough tokens this will\r\n   * return true, otherwise false is returned.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Boolean} True if the tokens were successfully removed, otherwise\r\n   *  false.\r\n   */\r\n  tryRemoveTokens: function(count) {\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize)\r\n      return true;\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize)\r\n      return false;\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, return false\r\n    if (count > this.content)\r\n      return false;\r\n\r\n    // Try to remove the requested tokens from the parent bucket\r\n    if (this.parentBucket && !this.parentBucket.tryRemoveTokens(count))\r\n      return false;\r\n\r\n    // Remove the requested tokens from this bucket and return\r\n    this.content -= count;\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * Add any new tokens to the bucket since the last drip.\r\n   * @returns {Boolean} True if new tokens were added, otherwise false.\r\n   */\r\n  drip: function() {\r\n    if (!this.tokensPerInterval) {\r\n      this.content = this.bucketSize;\r\n      return;\r\n    }\r\n\r\n    var now = +new Date();\r\n    var deltaMS = Math.max(now - this.lastDrip, 0);\r\n    this.lastDrip = now;\r\n\r\n    var dripAmount = deltaMS * (this.tokensPerInterval / this.interval);\r\n    this.content = Math.min(this.content + dripAmount, this.bucketSize);\r\n  }\r\n};\r\n\r\nmodule.exports = TokenBucket;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/limiter/lib/tokenBucket.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}}],"sources":{"node_modules/limiter/lib/tokenBucket.js":"\r\n/**\r\n * A hierarchical token bucket for rate limiting. See\r\n * http://en.wikipedia.org/wiki/Token_bucket for more information.\r\n * @author John Hurliman <jhurliman@cull.tv>\r\n *\r\n * @param {Number} bucketSize Maximum number of tokens to hold in the bucket.\r\n *  Also known as the burst rate.\r\n * @param {Number} tokensPerInterval Number of tokens to drip into the bucket\r\n *  over the course of one interval.\r\n * @param {String|Number} interval The interval length in milliseconds, or as\r\n *  one of the following strings: 'second', 'minute', 'hour', day'.\r\n * @param {TokenBucket} parentBucket Optional. A token bucket that will act as\r\n *  the parent of this bucket.\r\n */\r\nvar TokenBucket = function(bucketSize, tokensPerInterval, interval, parentBucket) {\r\n  this.bucketSize = bucketSize;\r\n  this.tokensPerInterval = tokensPerInterval;\r\n\r\n  if (typeof interval === 'string') {\r\n    switch (interval) {\r\n      case 'sec': case 'second':\r\n        this.interval = 1000; break;\r\n      case 'min': case 'minute':\r\n        this.interval = 1000 * 60; break;\r\n      case 'hr': case 'hour':\r\n        this.interval = 1000 * 60 * 60; break;\r\n      case 'day':\r\n        this.interval = 1000 * 60 * 60 * 24; break;\r\n      default:\r\n        throw new Error('Invaid interval ' + interval);\r\n    }\r\n  } else {\r\n    this.interval = interval;\r\n  }\r\n\r\n  this.parentBucket = parentBucket;\r\n  this.content = 0;\r\n  this.lastDrip = +new Date();\r\n};\r\n\r\nTokenBucket.prototype = {\r\n  bucketSize: 1,\r\n  tokensPerInterval: 1,\r\n  interval: 1000,\r\n  parentBucket: null,\r\n  content: 0,\r\n  lastDrip: 0,\r\n\r\n  /**\r\n   * Remove the requested number of tokens and fire the given callback. If the\r\n   * bucket (and any parent buckets) contains enough tokens this will happen\r\n   * immediately. Otherwise, the removal and callback will happen when enough\r\n   * tokens become available.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Function} callback(err, remainingTokens)\r\n   * @returns {Boolean} True if the callback was fired immediately, otherwise\r\n   *  false.\r\n   */\r\n  removeTokens: function(count, callback) {\r\n    var self = this;\r\n\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize) {\r\n      process.nextTick(callback.bind(null, null, count, Number.POSITIVE_INFINITY));\r\n      return true;\r\n    }\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize) {\r\n      process.nextTick(callback.bind(null, 'Requested tokens ' + count + ' exceeds bucket size ' +\r\n        this.bucketSize, null));\r\n      return false;\r\n    }\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, come back later\r\n    if (count > this.content)\r\n      return comeBackLater();\r\n\r\n    if (this.parentBucket) {\r\n      // Remove the requested from the parent bucket first\r\n      return this.parentBucket.removeTokens(count, function(err, remainingTokens) {\r\n        if (err) return callback(err, null);\r\n\r\n        // Check that we still have enough tokens in this bucket\r\n        if (count > self.content)\r\n          return comeBackLater();\r\n\r\n        // Tokens were removed from the parent bucket, now remove them from\r\n        // this bucket and fire the callback. Note that we look at the current\r\n        // bucket and parent bucket's remaining tokens and return the smaller\r\n        // of the two values\r\n        self.content -= count;\r\n        callback(null, Math.min(remainingTokens, self.content));\r\n      });\r\n    } else {\r\n      // Remove the requested tokens from this bucket and fire the callback\r\n      this.content -= count;\r\n      process.nextTick(callback.bind(null, null, this.content));\r\n      return true;\r\n    }\r\n\r\n    function comeBackLater() {\r\n      // How long do we need to wait to make up the difference in tokens?\r\n      var waitInterval = Math.ceil(\r\n        (count - self.content) * (self.interval / self.tokensPerInterval));\r\n      setTimeout(function() { self.removeTokens(count, callback); }, waitInterval);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to remove the requested number of tokens and return immediately.\r\n   * If the bucket (and any parent buckets) contains enough tokens this will\r\n   * return true, otherwise false is returned.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Boolean} True if the tokens were successfully removed, otherwise\r\n   *  false.\r\n   */\r\n  tryRemoveTokens: function(count) {\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize)\r\n      return true;\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize)\r\n      return false;\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, return false\r\n    if (count > this.content)\r\n      return false;\r\n\r\n    // Try to remove the requested tokens from the parent bucket\r\n    if (this.parentBucket && !this.parentBucket.tryRemoveTokens(count))\r\n      return false;\r\n\r\n    // Remove the requested tokens from this bucket and return\r\n    this.content -= count;\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * Add any new tokens to the bucket since the last drip.\r\n   * @returns {Boolean} True if new tokens were added, otherwise false.\r\n   */\r\n  drip: function() {\r\n    if (!this.tokensPerInterval) {\r\n      this.content = this.bucketSize;\r\n      return;\r\n    }\r\n\r\n    var now = +new Date();\r\n    var deltaMS = Math.max(now - this.lastDrip, 0);\r\n    this.lastDrip = now;\r\n\r\n    var dripAmount = deltaMS * (this.tokensPerInterval / this.interval);\r\n    this.content = Math.min(this.content + dripAmount, this.bucketSize);\r\n  }\r\n};\r\n\r\nmodule.exports = TokenBucket;\r\n"},"lineCount":169}},"error":null,"hash":"44f6f0dc4dee4c6fd14aa73eab378997","cacheData":{"env":{}}}