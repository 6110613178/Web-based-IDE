{"id":"node_modules/level-js/iterator.js","dependencies":[{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\package.json","includedInParent":true,"mtime":1648303336053},{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\level-js\\package.json","includedInParent":true,"mtime":1648301736073},{"name":"util","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\level-js\\iterator.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\util\\util.js"},{"name":"abstract-leveldown","loc":{"line":2,"column":32,"index":59},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\level-js\\iterator.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\abstract-leveldown\\abstract-leveldown.js"},{"name":"ltgt","loc":{"line":3,"column":19,"index":117},"parent":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\level-js\\iterator.js","resolved":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\ltgt\\index.js"}],"generated":{"js":"var util = require('util')\nvar AbstractIterator  = require('abstract-leveldown').AbstractIterator\nvar ltgt = require('ltgt')\n\nmodule.exports = Iterator\n\nfunction Iterator (db, options) {\n  if (!options) options = {}\n  this.options = options\n  AbstractIterator.call(this, db)\n  this._order = options.reverse ? 'DESC': 'ASC'\n  this._limit = options.limit\n  this._count = 0\n  this._done  = false\n  var lower = ltgt.lowerBound(options)\n  var upper = ltgt.upperBound(options)\n  try {\n    this._keyRange = lower || upper ? this.db.makeKeyRange({\n      lower: lower,\n      upper: upper,\n      excludeLower: ltgt.lowerBoundExclusive(options),\n      excludeUpper: ltgt.upperBoundExclusive(options)\n    }) : null\n  } catch (e) {\n    // The lower key is greater than the upper key.\n    // IndexedDB throws an error, but we'll just return 0 results.\n    this._keyRangeError = true\n  }\n  this.callback = null\n}\n\nutil.inherits(Iterator, AbstractIterator)\n\nIterator.prototype.createIterator = function() {\n  var self = this\n\n  self.iterator = self.db.iterate(function () {\n    self.onItem.apply(self, arguments)\n  }, {\n    keyRange: self._keyRange,\n    autoContinue: false,\n    order: self._order,\n    onError: function(err) { console.log('horrible error', err) },\n  })\n}\n\n// TODO the limit implementation here just ignores all reads after limit has been reached\n// it should cancel the iterator instead but I don't know how\nIterator.prototype.onItem = function (value, cursor, cursorTransaction) {\n  if (!cursor && this.callback) {\n    this.callback()\n    this.callback = false\n    return\n  }\n  var shouldCall = true\n\n  if (!!this._limit && this._limit > 0 && this._count++ >= this._limit)\n    shouldCall = false\n\n  if (shouldCall) this.callback(false, cursor.key, cursor.value)\n  if (cursor) cursor['continue']()\n}\n\nIterator.prototype._next = function (callback) {\n  if (!callback) return new Error('next() requires a callback argument')\n  if (this._keyRangeError) return callback()\n  if (!this._started) {\n    this.createIterator()\n    this._started = true\n  }\n  this.callback = callback\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/level-js/iterator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/level-js/iterator.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"node_modules/level-js/iterator.js":"var util = require('util')\nvar AbstractIterator  = require('abstract-leveldown').AbstractIterator\nvar ltgt = require('ltgt')\n\nmodule.exports = Iterator\n\nfunction Iterator (db, options) {\n  if (!options) options = {}\n  this.options = options\n  AbstractIterator.call(this, db)\n  this._order = options.reverse ? 'DESC': 'ASC'\n  this._limit = options.limit\n  this._count = 0\n  this._done  = false\n  var lower = ltgt.lowerBound(options)\n  var upper = ltgt.upperBound(options)\n  try {\n    this._keyRange = lower || upper ? this.db.makeKeyRange({\n      lower: lower,\n      upper: upper,\n      excludeLower: ltgt.lowerBoundExclusive(options),\n      excludeUpper: ltgt.upperBoundExclusive(options)\n    }) : null\n  } catch (e) {\n    // The lower key is greater than the upper key.\n    // IndexedDB throws an error, but we'll just return 0 results.\n    this._keyRangeError = true\n  }\n  this.callback = null\n}\n\nutil.inherits(Iterator, AbstractIterator)\n\nIterator.prototype.createIterator = function() {\n  var self = this\n\n  self.iterator = self.db.iterate(function () {\n    self.onItem.apply(self, arguments)\n  }, {\n    keyRange: self._keyRange,\n    autoContinue: false,\n    order: self._order,\n    onError: function(err) { console.log('horrible error', err) },\n  })\n}\n\n// TODO the limit implementation here just ignores all reads after limit has been reached\n// it should cancel the iterator instead but I don't know how\nIterator.prototype.onItem = function (value, cursor, cursorTransaction) {\n  if (!cursor && this.callback) {\n    this.callback()\n    this.callback = false\n    return\n  }\n  var shouldCall = true\n\n  if (!!this._limit && this._limit > 0 && this._count++ >= this._limit)\n    shouldCall = false\n\n  if (shouldCall) this.callback(false, cursor.key, cursor.value)\n  if (cursor) cursor['continue']()\n}\n\nIterator.prototype._next = function (callback) {\n  if (!callback) return new Error('next() requires a callback argument')\n  if (this._keyRangeError) return callback()\n  if (!this._started) {\n    this.createIterator()\n    this._started = true\n  }\n  this.callback = callback\n}\n"},"lineCount":73}},"error":null,"hash":"3f6468593c430e3fa2ddf3e45dd36a11","cacheData":{"env":{}}}