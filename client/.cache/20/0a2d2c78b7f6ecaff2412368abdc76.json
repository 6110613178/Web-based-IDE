{"id":"node_modules/functional-red-black-tree/rbtree.js","dependencies":[{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\package.json","includedInParent":true,"mtime":1648481643194},{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\functional-red-black-tree\\package.json","includedInParent":true,"mtime":1648481640619}],"generated":{"js":"\"use strict\"\n\nmodule.exports = createRBTree\n\nvar RED   = 0\nvar BLACK = 1\n\nfunction RBNode(color, key, value, left, right, count) {\n  this._color = color\n  this.key = key\n  this.value = value\n  this.left = left\n  this.right = right\n  this._count = count\n}\n\nfunction cloneNode(node) {\n  return new RBNode(node._color, node.key, node.value, node.left, node.right, node._count)\n}\n\nfunction repaint(color, node) {\n  return new RBNode(color, node.key, node.value, node.left, node.right, node._count)\n}\n\nfunction recount(node) {\n  node._count = 1 + (node.left ? node.left._count : 0) + (node.right ? node.right._count : 0)\n}\n\nfunction RedBlackTree(compare, root) {\n  this._compare = compare\n  this.root = root\n}\n\nvar proto = RedBlackTree.prototype\n\nObject.defineProperty(proto, \"keys\", {\n  get: function() {\n    var result = []\n    this.forEach(function(k,v) {\n      result.push(k)\n    })\n    return result\n  }\n})\n\nObject.defineProperty(proto, \"values\", {\n  get: function() {\n    var result = []\n    this.forEach(function(k,v) {\n      result.push(v)\n    })\n    return result\n  }\n})\n\n//Returns the number of nodes in the tree\nObject.defineProperty(proto, \"length\", {\n  get: function() {\n    if(this.root) {\n      return this.root._count\n    }\n    return 0\n  }\n})\n\n//Insert a new item into the tree\nproto.insert = function(key, value) {\n  var cmp = this._compare\n  //Find point to insert new node at\n  var n = this.root\n  var n_stack = []\n  var d_stack = []\n  while(n) {\n    var d = cmp(key, n.key)\n    n_stack.push(n)\n    d_stack.push(d)\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  //Rebuild path to leaf node\n  n_stack.push(new RBNode(RED, key, value, null, null, 1))\n  for(var s=n_stack.length-2; s>=0; --s) {\n    var n = n_stack[s]\n    if(d_stack[s] <= 0) {\n      n_stack[s] = new RBNode(n._color, n.key, n.value, n_stack[s+1], n.right, n._count+1)\n    } else {\n      n_stack[s] = new RBNode(n._color, n.key, n.value, n.left, n_stack[s+1], n._count+1)\n    }\n  }\n  //Rebalance tree using rotations\n  //console.log(\"start insert\", key, d_stack)\n  for(var s=n_stack.length-1; s>1; --s) {\n    var p = n_stack[s-1]\n    var n = n_stack[s]\n    if(p._color === BLACK || n._color === BLACK) {\n      break\n    }\n    var pp = n_stack[s-2]\n    if(pp.left === p) {\n      if(p.left === n) {\n        var y = pp.right\n        if(y && y._color === RED) {\n          //console.log(\"LLr\")\n          p._color = BLACK\n          pp.right = repaint(BLACK, y)\n          pp._color = RED\n          s -= 1\n        } else {\n          //console.log(\"LLb\")\n          pp._color = RED\n          pp.left = p.right\n          p._color = BLACK\n          p.right = pp\n          n_stack[s-2] = p\n          n_stack[s-1] = n\n          recount(pp)\n          recount(p)\n          if(s >= 3) {\n            var ppp = n_stack[s-3]\n            if(ppp.left === pp) {\n              ppp.left = p\n            } else {\n              ppp.right = p\n            }\n          }\n          break\n        }\n      } else {\n        var y = pp.right\n        if(y && y._color === RED) {\n          //console.log(\"LRr\")\n          p._color = BLACK\n          pp.right = repaint(BLACK, y)\n          pp._color = RED\n          s -= 1\n        } else {\n          //console.log(\"LRb\")\n          p.right = n.left\n          pp._color = RED\n          pp.left = n.right\n          n._color = BLACK\n          n.left = p\n          n.right = pp\n          n_stack[s-2] = n\n          n_stack[s-1] = p\n          recount(pp)\n          recount(p)\n          recount(n)\n          if(s >= 3) {\n            var ppp = n_stack[s-3]\n            if(ppp.left === pp) {\n              ppp.left = n\n            } else {\n              ppp.right = n\n            }\n          }\n          break\n        }\n      }\n    } else {\n      if(p.right === n) {\n        var y = pp.left\n        if(y && y._color === RED) {\n          //console.log(\"RRr\", y.key)\n          p._color = BLACK\n          pp.left = repaint(BLACK, y)\n          pp._color = RED\n          s -= 1\n        } else {\n          //console.log(\"RRb\")\n          pp._color = RED\n          pp.right = p.left\n          p._color = BLACK\n          p.left = pp\n          n_stack[s-2] = p\n          n_stack[s-1] = n\n          recount(pp)\n          recount(p)\n          if(s >= 3) {\n            var ppp = n_stack[s-3]\n            if(ppp.right === pp) {\n              ppp.right = p\n            } else {\n              ppp.left = p\n            }\n          }\n          break\n        }\n      } else {\n        var y = pp.left\n        if(y && y._color === RED) {\n          //console.log(\"RLr\")\n          p._color = BLACK\n          pp.left = repaint(BLACK, y)\n          pp._color = RED\n          s -= 1\n        } else {\n          //console.log(\"RLb\")\n          p.left = n.right\n          pp._color = RED\n          pp.right = n.left\n          n._color = BLACK\n          n.right = p\n          n.left = pp\n          n_stack[s-2] = n\n          n_stack[s-1] = p\n          recount(pp)\n          recount(p)\n          recount(n)\n          if(s >= 3) {\n            var ppp = n_stack[s-3]\n            if(ppp.right === pp) {\n              ppp.right = n\n            } else {\n              ppp.left = n\n            }\n          }\n          break\n        }\n      }\n    }\n  }\n  //Return new tree\n  n_stack[0]._color = BLACK\n  return new RedBlackTree(cmp, n_stack[0])\n}\n\n\n//Visit all nodes inorder\nfunction doVisitFull(visit, node) {\n  if(node.left) {\n    var v = doVisitFull(visit, node.left)\n    if(v) { return v }\n  }\n  var v = visit(node.key, node.value)\n  if(v) { return v }\n  if(node.right) {\n    return doVisitFull(visit, node.right)\n  }\n}\n\n//Visit half nodes in order\nfunction doVisitHalf(lo, compare, visit, node) {\n  var l = compare(lo, node.key)\n  if(l <= 0) {\n    if(node.left) {\n      var v = doVisitHalf(lo, compare, visit, node.left)\n      if(v) { return v }\n    }\n    var v = visit(node.key, node.value)\n    if(v) { return v }\n  }\n  if(node.right) {\n    return doVisitHalf(lo, compare, visit, node.right)\n  }\n}\n\n//Visit all nodes within a range\nfunction doVisit(lo, hi, compare, visit, node) {\n  var l = compare(lo, node.key)\n  var h = compare(hi, node.key)\n  var v\n  if(l <= 0) {\n    if(node.left) {\n      v = doVisit(lo, hi, compare, visit, node.left)\n      if(v) { return v }\n    }\n    if(h > 0) {\n      v = visit(node.key, node.value)\n      if(v) { return v }\n    }\n  }\n  if(h > 0 && node.right) {\n    return doVisit(lo, hi, compare, visit, node.right)\n  }\n}\n\n\nproto.forEach = function rbTreeForEach(visit, lo, hi) {\n  if(!this.root) {\n    return\n  }\n  switch(arguments.length) {\n    case 1:\n      return doVisitFull(visit, this.root)\n    break\n\n    case 2:\n      return doVisitHalf(lo, this._compare, visit, this.root)\n    break\n\n    case 3:\n      if(this._compare(lo, hi) >= 0) {\n        return\n      }\n      return doVisit(lo, hi, this._compare, visit, this.root)\n    break\n  }\n}\n\n//First item in list\nObject.defineProperty(proto, \"begin\", {\n  get: function() {\n    var stack = []\n    var n = this.root\n    while(n) {\n      stack.push(n)\n      n = n.left\n    }\n    return new RedBlackTreeIterator(this, stack)\n  }\n})\n\n//Last item in list\nObject.defineProperty(proto, \"end\", {\n  get: function() {\n    var stack = []\n    var n = this.root\n    while(n) {\n      stack.push(n)\n      n = n.right\n    }\n    return new RedBlackTreeIterator(this, stack)\n  }\n})\n\n//Find the ith item in the tree\nproto.at = function(idx) {\n  if(idx < 0) {\n    return new RedBlackTreeIterator(this, [])\n  }\n  var n = this.root\n  var stack = []\n  while(true) {\n    stack.push(n)\n    if(n.left) {\n      if(idx < n.left._count) {\n        n = n.left\n        continue\n      }\n      idx -= n.left._count\n    }\n    if(!idx) {\n      return new RedBlackTreeIterator(this, stack)\n    }\n    idx -= 1\n    if(n.right) {\n      if(idx >= n.right._count) {\n        break\n      }\n      n = n.right\n    } else {\n      break\n    }\n  }\n  return new RedBlackTreeIterator(this, [])\n}\n\nproto.ge = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  var last_ptr = 0\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d <= 0) {\n      last_ptr = stack.length\n    }\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  stack.length = last_ptr\n  return new RedBlackTreeIterator(this, stack)\n}\n\nproto.gt = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  var last_ptr = 0\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d < 0) {\n      last_ptr = stack.length\n    }\n    if(d < 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  stack.length = last_ptr\n  return new RedBlackTreeIterator(this, stack)\n}\n\nproto.lt = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  var last_ptr = 0\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d > 0) {\n      last_ptr = stack.length\n    }\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  stack.length = last_ptr\n  return new RedBlackTreeIterator(this, stack)\n}\n\nproto.le = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  var last_ptr = 0\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d >= 0) {\n      last_ptr = stack.length\n    }\n    if(d < 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  stack.length = last_ptr\n  return new RedBlackTreeIterator(this, stack)\n}\n\n//Finds the item with key if it exists\nproto.find = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d === 0) {\n      return new RedBlackTreeIterator(this, stack)\n    }\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  return new RedBlackTreeIterator(this, [])\n}\n\n//Removes item with key from tree\nproto.remove = function(key) {\n  var iter = this.find(key)\n  if(iter) {\n    return iter.remove()\n  }\n  return this\n}\n\n//Returns the item at `key`\nproto.get = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  while(n) {\n    var d = cmp(key, n.key)\n    if(d === 0) {\n      return n.value\n    }\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  return\n}\n\n//Iterator for red black tree\nfunction RedBlackTreeIterator(tree, stack) {\n  this.tree = tree\n  this._stack = stack\n}\n\nvar iproto = RedBlackTreeIterator.prototype\n\n//Test if iterator is valid\nObject.defineProperty(iproto, \"valid\", {\n  get: function() {\n    return this._stack.length > 0\n  }\n})\n\n//Node of the iterator\nObject.defineProperty(iproto, \"node\", {\n  get: function() {\n    if(this._stack.length > 0) {\n      return this._stack[this._stack.length-1]\n    }\n    return null\n  },\n  enumerable: true\n})\n\n//Makes a copy of an iterator\niproto.clone = function() {\n  return new RedBlackTreeIterator(this.tree, this._stack.slice())\n}\n\n//Swaps two nodes\nfunction swapNode(n, v) {\n  n.key = v.key\n  n.value = v.value\n  n.left = v.left\n  n.right = v.right\n  n._color = v._color\n  n._count = v._count\n}\n\n//Fix up a double black node in a tree\nfunction fixDoubleBlack(stack) {\n  var n, p, s, z\n  for(var i=stack.length-1; i>=0; --i) {\n    n = stack[i]\n    if(i === 0) {\n      n._color = BLACK\n      return\n    }\n    //console.log(\"visit node:\", n.key, i, stack[i].key, stack[i-1].key)\n    p = stack[i-1]\n    if(p.left === n) {\n      //console.log(\"left child\")\n      s = p.right\n      if(s.right && s.right._color === RED) {\n        //console.log(\"case 1: right sibling child red\")\n        s = p.right = cloneNode(s)\n        z = s.right = cloneNode(s.right)\n        p.right = s.left\n        s.left = p\n        s.right = z\n        s._color = p._color\n        n._color = BLACK\n        p._color = BLACK\n        z._color = BLACK\n        recount(p)\n        recount(s)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.left === p) {\n            pp.left = s\n          } else {\n            pp.right = s\n          }\n        }\n        stack[i-1] = s\n        return\n      } else if(s.left && s.left._color === RED) {\n        //console.log(\"case 1: left sibling child red\")\n        s = p.right = cloneNode(s)\n        z = s.left = cloneNode(s.left)\n        p.right = z.left\n        s.left = z.right\n        z.left = p\n        z.right = s\n        z._color = p._color\n        p._color = BLACK\n        s._color = BLACK\n        n._color = BLACK\n        recount(p)\n        recount(s)\n        recount(z)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.left === p) {\n            pp.left = z\n          } else {\n            pp.right = z\n          }\n        }\n        stack[i-1] = z\n        return\n      }\n      if(s._color === BLACK) {\n        if(p._color === RED) {\n          //console.log(\"case 2: black sibling, red parent\", p.right.value)\n          p._color = BLACK\n          p.right = repaint(RED, s)\n          return\n        } else {\n          //console.log(\"case 2: black sibling, black parent\", p.right.value)\n          p.right = repaint(RED, s)\n          continue  \n        }\n      } else {\n        //console.log(\"case 3: red sibling\")\n        s = cloneNode(s)\n        p.right = s.left\n        s.left = p\n        s._color = p._color\n        p._color = RED\n        recount(p)\n        recount(s)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.left === p) {\n            pp.left = s\n          } else {\n            pp.right = s\n          }\n        }\n        stack[i-1] = s\n        stack[i] = p\n        if(i+1 < stack.length) {\n          stack[i+1] = n\n        } else {\n          stack.push(n)\n        }\n        i = i+2\n      }\n    } else {\n      //console.log(\"right child\")\n      s = p.left\n      if(s.left && s.left._color === RED) {\n        //console.log(\"case 1: left sibling child red\", p.value, p._color)\n        s = p.left = cloneNode(s)\n        z = s.left = cloneNode(s.left)\n        p.left = s.right\n        s.right = p\n        s.left = z\n        s._color = p._color\n        n._color = BLACK\n        p._color = BLACK\n        z._color = BLACK\n        recount(p)\n        recount(s)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.right === p) {\n            pp.right = s\n          } else {\n            pp.left = s\n          }\n        }\n        stack[i-1] = s\n        return\n      } else if(s.right && s.right._color === RED) {\n        //console.log(\"case 1: right sibling child red\")\n        s = p.left = cloneNode(s)\n        z = s.right = cloneNode(s.right)\n        p.left = z.right\n        s.right = z.left\n        z.right = p\n        z.left = s\n        z._color = p._color\n        p._color = BLACK\n        s._color = BLACK\n        n._color = BLACK\n        recount(p)\n        recount(s)\n        recount(z)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.right === p) {\n            pp.right = z\n          } else {\n            pp.left = z\n          }\n        }\n        stack[i-1] = z\n        return\n      }\n      if(s._color === BLACK) {\n        if(p._color === RED) {\n          //console.log(\"case 2: black sibling, red parent\")\n          p._color = BLACK\n          p.left = repaint(RED, s)\n          return\n        } else {\n          //console.log(\"case 2: black sibling, black parent\")\n          p.left = repaint(RED, s)\n          continue  \n        }\n      } else {\n        //console.log(\"case 3: red sibling\")\n        s = cloneNode(s)\n        p.left = s.right\n        s.right = p\n        s._color = p._color\n        p._color = RED\n        recount(p)\n        recount(s)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.right === p) {\n            pp.right = s\n          } else {\n            pp.left = s\n          }\n        }\n        stack[i-1] = s\n        stack[i] = p\n        if(i+1 < stack.length) {\n          stack[i+1] = n\n        } else {\n          stack.push(n)\n        }\n        i = i+2\n      }\n    }\n  }\n}\n\n//Removes item at iterator from tree\niproto.remove = function() {\n  var stack = this._stack\n  if(stack.length === 0) {\n    return this.tree\n  }\n  //First copy path to node\n  var cstack = new Array(stack.length)\n  var n = stack[stack.length-1]\n  cstack[cstack.length-1] = new RBNode(n._color, n.key, n.value, n.left, n.right, n._count)\n  for(var i=stack.length-2; i>=0; --i) {\n    var n = stack[i]\n    if(n.left === stack[i+1]) {\n      cstack[i] = new RBNode(n._color, n.key, n.value, cstack[i+1], n.right, n._count)\n    } else {\n      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)\n    }\n  }\n\n  //Get node\n  n = cstack[cstack.length-1]\n  //console.log(\"start remove: \", n.value)\n\n  //If not leaf, then swap with previous node\n  if(n.left && n.right) {\n    //console.log(\"moving to leaf\")\n\n    //First walk to previous leaf\n    var split = cstack.length\n    n = n.left\n    while(n.right) {\n      cstack.push(n)\n      n = n.right\n    }\n    //Copy path to leaf\n    var v = cstack[split-1]\n    cstack.push(new RBNode(n._color, v.key, v.value, n.left, n.right, n._count))\n    cstack[split-1].key = n.key\n    cstack[split-1].value = n.value\n\n    //Fix up stack\n    for(var i=cstack.length-2; i>=split; --i) {\n      n = cstack[i]\n      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)\n    }\n    cstack[split-1].left = cstack[split]\n  }\n  //console.log(\"stack=\", cstack.map(function(v) { return v.value }))\n\n  //Remove leaf node\n  n = cstack[cstack.length-1]\n  if(n._color === RED) {\n    //Easy case: removing red leaf\n    //console.log(\"RED leaf\")\n    var p = cstack[cstack.length-2]\n    if(p.left === n) {\n      p.left = null\n    } else if(p.right === n) {\n      p.right = null\n    }\n    cstack.pop()\n    for(var i=0; i<cstack.length; ++i) {\n      cstack[i]._count--\n    }\n    return new RedBlackTree(this.tree._compare, cstack[0])\n  } else {\n    if(n.left || n.right) {\n      //Second easy case:  Single child black parent\n      //console.log(\"BLACK single child\")\n      if(n.left) {\n        swapNode(n, n.left)\n      } else if(n.right) {\n        swapNode(n, n.right)\n      }\n      //Child must be red, so repaint it black to balance color\n      n._color = BLACK\n      for(var i=0; i<cstack.length-1; ++i) {\n        cstack[i]._count--\n      }\n      return new RedBlackTree(this.tree._compare, cstack[0])\n    } else if(cstack.length === 1) {\n      //Third easy case: root\n      //console.log(\"ROOT\")\n      return new RedBlackTree(this.tree._compare, null)\n    } else {\n      //Hard case: Repaint n, and then do some nasty stuff\n      //console.log(\"BLACK leaf no children\")\n      for(var i=0; i<cstack.length; ++i) {\n        cstack[i]._count--\n      }\n      var parent = cstack[cstack.length-2]\n      fixDoubleBlack(cstack)\n      //Fix up links\n      if(parent.left === n) {\n        parent.left = null\n      } else {\n        parent.right = null\n      }\n    }\n  }\n  return new RedBlackTree(this.tree._compare, cstack[0])\n}\n\n//Returns key\nObject.defineProperty(iproto, \"key\", {\n  get: function() {\n    if(this._stack.length > 0) {\n      return this._stack[this._stack.length-1].key\n    }\n    return\n  },\n  enumerable: true\n})\n\n//Returns value\nObject.defineProperty(iproto, \"value\", {\n  get: function() {\n    if(this._stack.length > 0) {\n      return this._stack[this._stack.length-1].value\n    }\n    return\n  },\n  enumerable: true\n})\n\n\n//Returns the position of this iterator in the sorted list\nObject.defineProperty(iproto, \"index\", {\n  get: function() {\n    var idx = 0\n    var stack = this._stack\n    if(stack.length === 0) {\n      var r = this.tree.root\n      if(r) {\n        return r._count\n      }\n      return 0\n    } else if(stack[stack.length-1].left) {\n      idx = stack[stack.length-1].left._count\n    }\n    for(var s=stack.length-2; s>=0; --s) {\n      if(stack[s+1] === stack[s].right) {\n        ++idx\n        if(stack[s].left) {\n          idx += stack[s].left._count\n        }\n      }\n    }\n    return idx\n  },\n  enumerable: true\n})\n\n//Advances iterator to next element in list\niproto.next = function() {\n  var stack = this._stack\n  if(stack.length === 0) {\n    return\n  }\n  var n = stack[stack.length-1]\n  if(n.right) {\n    n = n.right\n    while(n) {\n      stack.push(n)\n      n = n.left\n    }\n  } else {\n    stack.pop()\n    while(stack.length > 0 && stack[stack.length-1].right === n) {\n      n = stack[stack.length-1]\n      stack.pop()\n    }\n  }\n}\n\n//Checks if iterator is at end of tree\nObject.defineProperty(iproto, \"hasNext\", {\n  get: function() {\n    var stack = this._stack\n    if(stack.length === 0) {\n      return false\n    }\n    if(stack[stack.length-1].right) {\n      return true\n    }\n    for(var s=stack.length-1; s>0; --s) {\n      if(stack[s-1].left === stack[s]) {\n        return true\n      }\n    }\n    return false\n  }\n})\n\n//Update value\niproto.update = function(value) {\n  var stack = this._stack\n  if(stack.length === 0) {\n    throw new Error(\"Can't update empty node!\")\n  }\n  var cstack = new Array(stack.length)\n  var n = stack[stack.length-1]\n  cstack[cstack.length-1] = new RBNode(n._color, n.key, value, n.left, n.right, n._count)\n  for(var i=stack.length-2; i>=0; --i) {\n    n = stack[i]\n    if(n.left === stack[i+1]) {\n      cstack[i] = new RBNode(n._color, n.key, n.value, cstack[i+1], n.right, n._count)\n    } else {\n      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)\n    }\n  }\n  return new RedBlackTree(this.tree._compare, cstack[0])\n}\n\n//Moves iterator backward one element\niproto.prev = function() {\n  var stack = this._stack\n  if(stack.length === 0) {\n    return\n  }\n  var n = stack[stack.length-1]\n  if(n.left) {\n    n = n.left\n    while(n) {\n      stack.push(n)\n      n = n.right\n    }\n  } else {\n    stack.pop()\n    while(stack.length > 0 && stack[stack.length-1].left === n) {\n      n = stack[stack.length-1]\n      stack.pop()\n    }\n  }\n}\n\n//Checks if iterator is at start of tree\nObject.defineProperty(iproto, \"hasPrev\", {\n  get: function() {\n    var stack = this._stack\n    if(stack.length === 0) {\n      return false\n    }\n    if(stack[stack.length-1].left) {\n      return true\n    }\n    for(var s=stack.length-1; s>0; --s) {\n      if(stack[s-1].right === stack[s]) {\n        return true\n      }\n    }\n    return false\n  }\n})\n\n//Default comparison function\nfunction defaultCompare(a, b) {\n  if(a < b) {\n    return -1\n  }\n  if(a > b) {\n    return 1\n  }\n  return 0\n}\n\n//Build a tree\nfunction createRBTree(compare) {\n  return new RedBlackTree(compare || defaultCompare, null)\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/functional-red-black-tree/rbtree.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}}],"sources":{"node_modules/functional-red-black-tree/rbtree.js":"\"use strict\"\n\nmodule.exports = createRBTree\n\nvar RED   = 0\nvar BLACK = 1\n\nfunction RBNode(color, key, value, left, right, count) {\n  this._color = color\n  this.key = key\n  this.value = value\n  this.left = left\n  this.right = right\n  this._count = count\n}\n\nfunction cloneNode(node) {\n  return new RBNode(node._color, node.key, node.value, node.left, node.right, node._count)\n}\n\nfunction repaint(color, node) {\n  return new RBNode(color, node.key, node.value, node.left, node.right, node._count)\n}\n\nfunction recount(node) {\n  node._count = 1 + (node.left ? node.left._count : 0) + (node.right ? node.right._count : 0)\n}\n\nfunction RedBlackTree(compare, root) {\n  this._compare = compare\n  this.root = root\n}\n\nvar proto = RedBlackTree.prototype\n\nObject.defineProperty(proto, \"keys\", {\n  get: function() {\n    var result = []\n    this.forEach(function(k,v) {\n      result.push(k)\n    })\n    return result\n  }\n})\n\nObject.defineProperty(proto, \"values\", {\n  get: function() {\n    var result = []\n    this.forEach(function(k,v) {\n      result.push(v)\n    })\n    return result\n  }\n})\n\n//Returns the number of nodes in the tree\nObject.defineProperty(proto, \"length\", {\n  get: function() {\n    if(this.root) {\n      return this.root._count\n    }\n    return 0\n  }\n})\n\n//Insert a new item into the tree\nproto.insert = function(key, value) {\n  var cmp = this._compare\n  //Find point to insert new node at\n  var n = this.root\n  var n_stack = []\n  var d_stack = []\n  while(n) {\n    var d = cmp(key, n.key)\n    n_stack.push(n)\n    d_stack.push(d)\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  //Rebuild path to leaf node\n  n_stack.push(new RBNode(RED, key, value, null, null, 1))\n  for(var s=n_stack.length-2; s>=0; --s) {\n    var n = n_stack[s]\n    if(d_stack[s] <= 0) {\n      n_stack[s] = new RBNode(n._color, n.key, n.value, n_stack[s+1], n.right, n._count+1)\n    } else {\n      n_stack[s] = new RBNode(n._color, n.key, n.value, n.left, n_stack[s+1], n._count+1)\n    }\n  }\n  //Rebalance tree using rotations\n  //console.log(\"start insert\", key, d_stack)\n  for(var s=n_stack.length-1; s>1; --s) {\n    var p = n_stack[s-1]\n    var n = n_stack[s]\n    if(p._color === BLACK || n._color === BLACK) {\n      break\n    }\n    var pp = n_stack[s-2]\n    if(pp.left === p) {\n      if(p.left === n) {\n        var y = pp.right\n        if(y && y._color === RED) {\n          //console.log(\"LLr\")\n          p._color = BLACK\n          pp.right = repaint(BLACK, y)\n          pp._color = RED\n          s -= 1\n        } else {\n          //console.log(\"LLb\")\n          pp._color = RED\n          pp.left = p.right\n          p._color = BLACK\n          p.right = pp\n          n_stack[s-2] = p\n          n_stack[s-1] = n\n          recount(pp)\n          recount(p)\n          if(s >= 3) {\n            var ppp = n_stack[s-3]\n            if(ppp.left === pp) {\n              ppp.left = p\n            } else {\n              ppp.right = p\n            }\n          }\n          break\n        }\n      } else {\n        var y = pp.right\n        if(y && y._color === RED) {\n          //console.log(\"LRr\")\n          p._color = BLACK\n          pp.right = repaint(BLACK, y)\n          pp._color = RED\n          s -= 1\n        } else {\n          //console.log(\"LRb\")\n          p.right = n.left\n          pp._color = RED\n          pp.left = n.right\n          n._color = BLACK\n          n.left = p\n          n.right = pp\n          n_stack[s-2] = n\n          n_stack[s-1] = p\n          recount(pp)\n          recount(p)\n          recount(n)\n          if(s >= 3) {\n            var ppp = n_stack[s-3]\n            if(ppp.left === pp) {\n              ppp.left = n\n            } else {\n              ppp.right = n\n            }\n          }\n          break\n        }\n      }\n    } else {\n      if(p.right === n) {\n        var y = pp.left\n        if(y && y._color === RED) {\n          //console.log(\"RRr\", y.key)\n          p._color = BLACK\n          pp.left = repaint(BLACK, y)\n          pp._color = RED\n          s -= 1\n        } else {\n          //console.log(\"RRb\")\n          pp._color = RED\n          pp.right = p.left\n          p._color = BLACK\n          p.left = pp\n          n_stack[s-2] = p\n          n_stack[s-1] = n\n          recount(pp)\n          recount(p)\n          if(s >= 3) {\n            var ppp = n_stack[s-3]\n            if(ppp.right === pp) {\n              ppp.right = p\n            } else {\n              ppp.left = p\n            }\n          }\n          break\n        }\n      } else {\n        var y = pp.left\n        if(y && y._color === RED) {\n          //console.log(\"RLr\")\n          p._color = BLACK\n          pp.left = repaint(BLACK, y)\n          pp._color = RED\n          s -= 1\n        } else {\n          //console.log(\"RLb\")\n          p.left = n.right\n          pp._color = RED\n          pp.right = n.left\n          n._color = BLACK\n          n.right = p\n          n.left = pp\n          n_stack[s-2] = n\n          n_stack[s-1] = p\n          recount(pp)\n          recount(p)\n          recount(n)\n          if(s >= 3) {\n            var ppp = n_stack[s-3]\n            if(ppp.right === pp) {\n              ppp.right = n\n            } else {\n              ppp.left = n\n            }\n          }\n          break\n        }\n      }\n    }\n  }\n  //Return new tree\n  n_stack[0]._color = BLACK\n  return new RedBlackTree(cmp, n_stack[0])\n}\n\n\n//Visit all nodes inorder\nfunction doVisitFull(visit, node) {\n  if(node.left) {\n    var v = doVisitFull(visit, node.left)\n    if(v) { return v }\n  }\n  var v = visit(node.key, node.value)\n  if(v) { return v }\n  if(node.right) {\n    return doVisitFull(visit, node.right)\n  }\n}\n\n//Visit half nodes in order\nfunction doVisitHalf(lo, compare, visit, node) {\n  var l = compare(lo, node.key)\n  if(l <= 0) {\n    if(node.left) {\n      var v = doVisitHalf(lo, compare, visit, node.left)\n      if(v) { return v }\n    }\n    var v = visit(node.key, node.value)\n    if(v) { return v }\n  }\n  if(node.right) {\n    return doVisitHalf(lo, compare, visit, node.right)\n  }\n}\n\n//Visit all nodes within a range\nfunction doVisit(lo, hi, compare, visit, node) {\n  var l = compare(lo, node.key)\n  var h = compare(hi, node.key)\n  var v\n  if(l <= 0) {\n    if(node.left) {\n      v = doVisit(lo, hi, compare, visit, node.left)\n      if(v) { return v }\n    }\n    if(h > 0) {\n      v = visit(node.key, node.value)\n      if(v) { return v }\n    }\n  }\n  if(h > 0 && node.right) {\n    return doVisit(lo, hi, compare, visit, node.right)\n  }\n}\n\n\nproto.forEach = function rbTreeForEach(visit, lo, hi) {\n  if(!this.root) {\n    return\n  }\n  switch(arguments.length) {\n    case 1:\n      return doVisitFull(visit, this.root)\n    break\n\n    case 2:\n      return doVisitHalf(lo, this._compare, visit, this.root)\n    break\n\n    case 3:\n      if(this._compare(lo, hi) >= 0) {\n        return\n      }\n      return doVisit(lo, hi, this._compare, visit, this.root)\n    break\n  }\n}\n\n//First item in list\nObject.defineProperty(proto, \"begin\", {\n  get: function() {\n    var stack = []\n    var n = this.root\n    while(n) {\n      stack.push(n)\n      n = n.left\n    }\n    return new RedBlackTreeIterator(this, stack)\n  }\n})\n\n//Last item in list\nObject.defineProperty(proto, \"end\", {\n  get: function() {\n    var stack = []\n    var n = this.root\n    while(n) {\n      stack.push(n)\n      n = n.right\n    }\n    return new RedBlackTreeIterator(this, stack)\n  }\n})\n\n//Find the ith item in the tree\nproto.at = function(idx) {\n  if(idx < 0) {\n    return new RedBlackTreeIterator(this, [])\n  }\n  var n = this.root\n  var stack = []\n  while(true) {\n    stack.push(n)\n    if(n.left) {\n      if(idx < n.left._count) {\n        n = n.left\n        continue\n      }\n      idx -= n.left._count\n    }\n    if(!idx) {\n      return new RedBlackTreeIterator(this, stack)\n    }\n    idx -= 1\n    if(n.right) {\n      if(idx >= n.right._count) {\n        break\n      }\n      n = n.right\n    } else {\n      break\n    }\n  }\n  return new RedBlackTreeIterator(this, [])\n}\n\nproto.ge = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  var last_ptr = 0\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d <= 0) {\n      last_ptr = stack.length\n    }\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  stack.length = last_ptr\n  return new RedBlackTreeIterator(this, stack)\n}\n\nproto.gt = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  var last_ptr = 0\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d < 0) {\n      last_ptr = stack.length\n    }\n    if(d < 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  stack.length = last_ptr\n  return new RedBlackTreeIterator(this, stack)\n}\n\nproto.lt = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  var last_ptr = 0\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d > 0) {\n      last_ptr = stack.length\n    }\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  stack.length = last_ptr\n  return new RedBlackTreeIterator(this, stack)\n}\n\nproto.le = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  var last_ptr = 0\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d >= 0) {\n      last_ptr = stack.length\n    }\n    if(d < 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  stack.length = last_ptr\n  return new RedBlackTreeIterator(this, stack)\n}\n\n//Finds the item with key if it exists\nproto.find = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  var stack = []\n  while(n) {\n    var d = cmp(key, n.key)\n    stack.push(n)\n    if(d === 0) {\n      return new RedBlackTreeIterator(this, stack)\n    }\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  return new RedBlackTreeIterator(this, [])\n}\n\n//Removes item with key from tree\nproto.remove = function(key) {\n  var iter = this.find(key)\n  if(iter) {\n    return iter.remove()\n  }\n  return this\n}\n\n//Returns the item at `key`\nproto.get = function(key) {\n  var cmp = this._compare\n  var n = this.root\n  while(n) {\n    var d = cmp(key, n.key)\n    if(d === 0) {\n      return n.value\n    }\n    if(d <= 0) {\n      n = n.left\n    } else {\n      n = n.right\n    }\n  }\n  return\n}\n\n//Iterator for red black tree\nfunction RedBlackTreeIterator(tree, stack) {\n  this.tree = tree\n  this._stack = stack\n}\n\nvar iproto = RedBlackTreeIterator.prototype\n\n//Test if iterator is valid\nObject.defineProperty(iproto, \"valid\", {\n  get: function() {\n    return this._stack.length > 0\n  }\n})\n\n//Node of the iterator\nObject.defineProperty(iproto, \"node\", {\n  get: function() {\n    if(this._stack.length > 0) {\n      return this._stack[this._stack.length-1]\n    }\n    return null\n  },\n  enumerable: true\n})\n\n//Makes a copy of an iterator\niproto.clone = function() {\n  return new RedBlackTreeIterator(this.tree, this._stack.slice())\n}\n\n//Swaps two nodes\nfunction swapNode(n, v) {\n  n.key = v.key\n  n.value = v.value\n  n.left = v.left\n  n.right = v.right\n  n._color = v._color\n  n._count = v._count\n}\n\n//Fix up a double black node in a tree\nfunction fixDoubleBlack(stack) {\n  var n, p, s, z\n  for(var i=stack.length-1; i>=0; --i) {\n    n = stack[i]\n    if(i === 0) {\n      n._color = BLACK\n      return\n    }\n    //console.log(\"visit node:\", n.key, i, stack[i].key, stack[i-1].key)\n    p = stack[i-1]\n    if(p.left === n) {\n      //console.log(\"left child\")\n      s = p.right\n      if(s.right && s.right._color === RED) {\n        //console.log(\"case 1: right sibling child red\")\n        s = p.right = cloneNode(s)\n        z = s.right = cloneNode(s.right)\n        p.right = s.left\n        s.left = p\n        s.right = z\n        s._color = p._color\n        n._color = BLACK\n        p._color = BLACK\n        z._color = BLACK\n        recount(p)\n        recount(s)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.left === p) {\n            pp.left = s\n          } else {\n            pp.right = s\n          }\n        }\n        stack[i-1] = s\n        return\n      } else if(s.left && s.left._color === RED) {\n        //console.log(\"case 1: left sibling child red\")\n        s = p.right = cloneNode(s)\n        z = s.left = cloneNode(s.left)\n        p.right = z.left\n        s.left = z.right\n        z.left = p\n        z.right = s\n        z._color = p._color\n        p._color = BLACK\n        s._color = BLACK\n        n._color = BLACK\n        recount(p)\n        recount(s)\n        recount(z)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.left === p) {\n            pp.left = z\n          } else {\n            pp.right = z\n          }\n        }\n        stack[i-1] = z\n        return\n      }\n      if(s._color === BLACK) {\n        if(p._color === RED) {\n          //console.log(\"case 2: black sibling, red parent\", p.right.value)\n          p._color = BLACK\n          p.right = repaint(RED, s)\n          return\n        } else {\n          //console.log(\"case 2: black sibling, black parent\", p.right.value)\n          p.right = repaint(RED, s)\n          continue  \n        }\n      } else {\n        //console.log(\"case 3: red sibling\")\n        s = cloneNode(s)\n        p.right = s.left\n        s.left = p\n        s._color = p._color\n        p._color = RED\n        recount(p)\n        recount(s)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.left === p) {\n            pp.left = s\n          } else {\n            pp.right = s\n          }\n        }\n        stack[i-1] = s\n        stack[i] = p\n        if(i+1 < stack.length) {\n          stack[i+1] = n\n        } else {\n          stack.push(n)\n        }\n        i = i+2\n      }\n    } else {\n      //console.log(\"right child\")\n      s = p.left\n      if(s.left && s.left._color === RED) {\n        //console.log(\"case 1: left sibling child red\", p.value, p._color)\n        s = p.left = cloneNode(s)\n        z = s.left = cloneNode(s.left)\n        p.left = s.right\n        s.right = p\n        s.left = z\n        s._color = p._color\n        n._color = BLACK\n        p._color = BLACK\n        z._color = BLACK\n        recount(p)\n        recount(s)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.right === p) {\n            pp.right = s\n          } else {\n            pp.left = s\n          }\n        }\n        stack[i-1] = s\n        return\n      } else if(s.right && s.right._color === RED) {\n        //console.log(\"case 1: right sibling child red\")\n        s = p.left = cloneNode(s)\n        z = s.right = cloneNode(s.right)\n        p.left = z.right\n        s.right = z.left\n        z.right = p\n        z.left = s\n        z._color = p._color\n        p._color = BLACK\n        s._color = BLACK\n        n._color = BLACK\n        recount(p)\n        recount(s)\n        recount(z)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.right === p) {\n            pp.right = z\n          } else {\n            pp.left = z\n          }\n        }\n        stack[i-1] = z\n        return\n      }\n      if(s._color === BLACK) {\n        if(p._color === RED) {\n          //console.log(\"case 2: black sibling, red parent\")\n          p._color = BLACK\n          p.left = repaint(RED, s)\n          return\n        } else {\n          //console.log(\"case 2: black sibling, black parent\")\n          p.left = repaint(RED, s)\n          continue  \n        }\n      } else {\n        //console.log(\"case 3: red sibling\")\n        s = cloneNode(s)\n        p.left = s.right\n        s.right = p\n        s._color = p._color\n        p._color = RED\n        recount(p)\n        recount(s)\n        if(i > 1) {\n          var pp = stack[i-2]\n          if(pp.right === p) {\n            pp.right = s\n          } else {\n            pp.left = s\n          }\n        }\n        stack[i-1] = s\n        stack[i] = p\n        if(i+1 < stack.length) {\n          stack[i+1] = n\n        } else {\n          stack.push(n)\n        }\n        i = i+2\n      }\n    }\n  }\n}\n\n//Removes item at iterator from tree\niproto.remove = function() {\n  var stack = this._stack\n  if(stack.length === 0) {\n    return this.tree\n  }\n  //First copy path to node\n  var cstack = new Array(stack.length)\n  var n = stack[stack.length-1]\n  cstack[cstack.length-1] = new RBNode(n._color, n.key, n.value, n.left, n.right, n._count)\n  for(var i=stack.length-2; i>=0; --i) {\n    var n = stack[i]\n    if(n.left === stack[i+1]) {\n      cstack[i] = new RBNode(n._color, n.key, n.value, cstack[i+1], n.right, n._count)\n    } else {\n      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)\n    }\n  }\n\n  //Get node\n  n = cstack[cstack.length-1]\n  //console.log(\"start remove: \", n.value)\n\n  //If not leaf, then swap with previous node\n  if(n.left && n.right) {\n    //console.log(\"moving to leaf\")\n\n    //First walk to previous leaf\n    var split = cstack.length\n    n = n.left\n    while(n.right) {\n      cstack.push(n)\n      n = n.right\n    }\n    //Copy path to leaf\n    var v = cstack[split-1]\n    cstack.push(new RBNode(n._color, v.key, v.value, n.left, n.right, n._count))\n    cstack[split-1].key = n.key\n    cstack[split-1].value = n.value\n\n    //Fix up stack\n    for(var i=cstack.length-2; i>=split; --i) {\n      n = cstack[i]\n      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)\n    }\n    cstack[split-1].left = cstack[split]\n  }\n  //console.log(\"stack=\", cstack.map(function(v) { return v.value }))\n\n  //Remove leaf node\n  n = cstack[cstack.length-1]\n  if(n._color === RED) {\n    //Easy case: removing red leaf\n    //console.log(\"RED leaf\")\n    var p = cstack[cstack.length-2]\n    if(p.left === n) {\n      p.left = null\n    } else if(p.right === n) {\n      p.right = null\n    }\n    cstack.pop()\n    for(var i=0; i<cstack.length; ++i) {\n      cstack[i]._count--\n    }\n    return new RedBlackTree(this.tree._compare, cstack[0])\n  } else {\n    if(n.left || n.right) {\n      //Second easy case:  Single child black parent\n      //console.log(\"BLACK single child\")\n      if(n.left) {\n        swapNode(n, n.left)\n      } else if(n.right) {\n        swapNode(n, n.right)\n      }\n      //Child must be red, so repaint it black to balance color\n      n._color = BLACK\n      for(var i=0; i<cstack.length-1; ++i) {\n        cstack[i]._count--\n      }\n      return new RedBlackTree(this.tree._compare, cstack[0])\n    } else if(cstack.length === 1) {\n      //Third easy case: root\n      //console.log(\"ROOT\")\n      return new RedBlackTree(this.tree._compare, null)\n    } else {\n      //Hard case: Repaint n, and then do some nasty stuff\n      //console.log(\"BLACK leaf no children\")\n      for(var i=0; i<cstack.length; ++i) {\n        cstack[i]._count--\n      }\n      var parent = cstack[cstack.length-2]\n      fixDoubleBlack(cstack)\n      //Fix up links\n      if(parent.left === n) {\n        parent.left = null\n      } else {\n        parent.right = null\n      }\n    }\n  }\n  return new RedBlackTree(this.tree._compare, cstack[0])\n}\n\n//Returns key\nObject.defineProperty(iproto, \"key\", {\n  get: function() {\n    if(this._stack.length > 0) {\n      return this._stack[this._stack.length-1].key\n    }\n    return\n  },\n  enumerable: true\n})\n\n//Returns value\nObject.defineProperty(iproto, \"value\", {\n  get: function() {\n    if(this._stack.length > 0) {\n      return this._stack[this._stack.length-1].value\n    }\n    return\n  },\n  enumerable: true\n})\n\n\n//Returns the position of this iterator in the sorted list\nObject.defineProperty(iproto, \"index\", {\n  get: function() {\n    var idx = 0\n    var stack = this._stack\n    if(stack.length === 0) {\n      var r = this.tree.root\n      if(r) {\n        return r._count\n      }\n      return 0\n    } else if(stack[stack.length-1].left) {\n      idx = stack[stack.length-1].left._count\n    }\n    for(var s=stack.length-2; s>=0; --s) {\n      if(stack[s+1] === stack[s].right) {\n        ++idx\n        if(stack[s].left) {\n          idx += stack[s].left._count\n        }\n      }\n    }\n    return idx\n  },\n  enumerable: true\n})\n\n//Advances iterator to next element in list\niproto.next = function() {\n  var stack = this._stack\n  if(stack.length === 0) {\n    return\n  }\n  var n = stack[stack.length-1]\n  if(n.right) {\n    n = n.right\n    while(n) {\n      stack.push(n)\n      n = n.left\n    }\n  } else {\n    stack.pop()\n    while(stack.length > 0 && stack[stack.length-1].right === n) {\n      n = stack[stack.length-1]\n      stack.pop()\n    }\n  }\n}\n\n//Checks if iterator is at end of tree\nObject.defineProperty(iproto, \"hasNext\", {\n  get: function() {\n    var stack = this._stack\n    if(stack.length === 0) {\n      return false\n    }\n    if(stack[stack.length-1].right) {\n      return true\n    }\n    for(var s=stack.length-1; s>0; --s) {\n      if(stack[s-1].left === stack[s]) {\n        return true\n      }\n    }\n    return false\n  }\n})\n\n//Update value\niproto.update = function(value) {\n  var stack = this._stack\n  if(stack.length === 0) {\n    throw new Error(\"Can't update empty node!\")\n  }\n  var cstack = new Array(stack.length)\n  var n = stack[stack.length-1]\n  cstack[cstack.length-1] = new RBNode(n._color, n.key, value, n.left, n.right, n._count)\n  for(var i=stack.length-2; i>=0; --i) {\n    n = stack[i]\n    if(n.left === stack[i+1]) {\n      cstack[i] = new RBNode(n._color, n.key, n.value, cstack[i+1], n.right, n._count)\n    } else {\n      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)\n    }\n  }\n  return new RedBlackTree(this.tree._compare, cstack[0])\n}\n\n//Moves iterator backward one element\niproto.prev = function() {\n  var stack = this._stack\n  if(stack.length === 0) {\n    return\n  }\n  var n = stack[stack.length-1]\n  if(n.left) {\n    n = n.left\n    while(n) {\n      stack.push(n)\n      n = n.right\n    }\n  } else {\n    stack.pop()\n    while(stack.length > 0 && stack[stack.length-1].left === n) {\n      n = stack[stack.length-1]\n      stack.pop()\n    }\n  }\n}\n\n//Checks if iterator is at start of tree\nObject.defineProperty(iproto, \"hasPrev\", {\n  get: function() {\n    var stack = this._stack\n    if(stack.length === 0) {\n      return false\n    }\n    if(stack[stack.length-1].left) {\n      return true\n    }\n    for(var s=stack.length-1; s>0; --s) {\n      if(stack[s-1].right === stack[s]) {\n        return true\n      }\n    }\n    return false\n  }\n})\n\n//Default comparison function\nfunction defaultCompare(a, b) {\n  if(a < b) {\n    return -1\n  }\n  if(a > b) {\n    return 1\n  }\n  return 0\n}\n\n//Build a tree\nfunction createRBTree(compare) {\n  return new RedBlackTree(compare || defaultCompare, null)\n}"},"lineCount":996}},"error":null,"hash":"dc265dd6250578beb93d11b5dcaeb671","cacheData":{"env":{}}}