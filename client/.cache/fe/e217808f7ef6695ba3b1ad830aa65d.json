{"id":"node_modules/proto3-json-serializer/build/src/timestamp.js","dependencies":[{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\proto3-json-serializer\\build\\src\\timestamp.js.map","includedInParent":true,"mtime":1648481640911},{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\package.json","includedInParent":true,"mtime":1648481643194},{"name":"C:\\Users\\Teerat Prasitwet\\Desktop\\Web-based IDE Project\\client\\node_modules\\proto3-json-serializer\\package.json","includedInParent":true,"mtime":1648481640809}],"generated":{"js":"\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.googleProtobufTimestampFromProto3JSON = exports.googleProtobufTimestampToProto3JSON = void 0;\nfunction googleProtobufTimestampToProto3JSON(obj) {\n    var _a;\n    // seconds is an instance of Long so it won't be undefined\n    const durationSeconds = obj.seconds;\n    const date = new Date(durationSeconds * 1000).toISOString();\n    // Pad leading zeros if nano string length is less than 9.\n    let nanos = (_a = obj.nanos) === null || _a === void 0 ? void 0 : _a.toString().padStart(9, '0');\n    // Trim the unsignificant zeros and keep 3, 6, or 9 decimal digits.\n    while (nanos && nanos.length > 3 && nanos.endsWith('000')) {\n        nanos = nanos.slice(0, -3);\n    }\n    return date.replace(/(?:\\.\\d{0,9})/, '.' + nanos);\n}\nexports.googleProtobufTimestampToProto3JSON = googleProtobufTimestampToProto3JSON;\nfunction googleProtobufTimestampFromProto3JSON(json) {\n    const match = json.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?/);\n    if (!match) {\n        throw new Error(`googleProtobufDurationFromProto3JSON: incorrect value ${json} passed as google.protobuf.Duration`);\n    }\n    const date = new Date(json);\n    const millisecondsSinceEpoch = date.getTime();\n    const seconds = Math.floor(millisecondsSinceEpoch / 1000);\n    // The fractional seconds in the JSON timestamps can go up to 9 digits (i.e. up to 1 nanosecond resolution).\n    // However, Javascript Date object represent any date and time to millisecond precision.\n    // To keep the precision, we extract the fractional seconds and append 0 until the length is equal to 9.\n    let nanos = 0;\n    const secondsFromDate = json.split('.')[1];\n    if (secondsFromDate) {\n        nanos = parseInt(secondsFromDate.slice(0, -1).padEnd(9, '0'));\n    }\n    const result = {};\n    if (seconds !== 0) {\n        result.seconds = seconds;\n    }\n    if (nanos !== 0) {\n        result.nanos = nanos;\n    }\n    return result;\n}\nexports.googleProtobufTimestampFromProto3JSON = googleProtobufTimestampFromProto3JSON;\n"},"sourceMaps":{"js":{"version":3,"file":"timestamp.js","sourceRoot":"","sources":["../../typescript/src/timestamp.ts"],"names":[],"mappings":";AAAA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAUjC,SAAgB,mCAAmC,CACjD,GAAiC;;IAEjC,0DAA0D;IAC1D,MAAM,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC;IACpC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;IAC5D,0DAA0D;IAC1D,IAAI,KAAK,GAAG,MAAA,GAAG,CAAC,KAAK,0CAAE,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACnD,mEAAmE;IACnE,OAAO,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACzD,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAC5B;IACD,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC;AACpD,CAAC;AAbD,kFAaC;AAED,SAAgB,qCAAqC,CAAC,IAAY;IAChE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;IAC3E,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,IAAI,KAAK,CACb,yDAAyD,IAAI,qCAAqC,CACnG,CAAC;KACH;IACD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,MAAM,sBAAsB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,CAAC;IAC1D,4GAA4G;IAC5G,wFAAwF;IACxF,wGAAwG;IACxG,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI,eAAe,EAAE;QACnB,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;KAC/D;IACD,MAAM,MAAM,GAAoB,EAAE,CAAC;IACnC,IAAI,OAAO,KAAK,CAAC,EAAE;QACjB,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;IACD,IAAI,KAAK,KAAK,CAAC,EAAE;QACf,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AA1BD,sFA0BC","sourcesContent":[null]}},"error":null,"hash":"1da8358c285c93cda6893c340cb3b978","cacheData":{"env":{}}}